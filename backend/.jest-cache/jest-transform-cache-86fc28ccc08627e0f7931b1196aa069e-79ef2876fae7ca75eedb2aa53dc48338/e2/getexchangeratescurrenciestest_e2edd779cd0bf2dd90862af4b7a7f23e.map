{"file":"/Users/kimnaciscionis/git/personal/seb-exchange-rates/backend/test/unit/routes/public/get-exchange-rates-currencies.test.ts","mappings":";;;;;AAeA,IAAI,CAAC,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;IACpD,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC,CAAC;AAhBH,4CAIyB;AACzB,oEAAgC;AAEhC,IAAI,GAAoB,CAAC;AACzB,IAAI,IAAI,GAAG,IAAA,mCAA0B,GAAE,CAAC;AAExC,MAAM,UAAU,GAAG,IAAA,wBAAE,EAAC,KAAK,EAAE,OAAY,EAAE,OAAY,EAAE,EAAE;IACzD,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC;AAMH,SAAS,CAAC,KAAK,IAAI,EAAE;IACnB,GAAG,GAAG,MAAM,IAAA,qBAAY,GAAE,CAAC;AAC7B,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,KAAK,IAAI,EAAE;IACpB,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,KAAK,IAAI,EAAE;IAClB,MAAM,IAAA,oBAAW,GAAE,CAAC;AACtB,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,uCAAuC,EAAE,GAAG,EAAE;IACrD,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACxC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC,CAAC;YAClB,MAAM,EAAE,GAAG,EAAE,CAAC;gBACZ,EAAE,QAAQ,EAAE,KAAK,EAAE;gBACnB,EAAE,QAAQ,EAAE,KAAK,EAAE;gBACnB,EAAE,QAAQ,EAAE,KAAK,EAAE;aACpB;SACF,CAAC,CAAC;QAEH,MAAM,YAAY,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC;YACpC,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,mCAAmC;SACzC,CAAC,CAAC;QAEH,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/kimnaciscionis/git/personal/seb-exchange-rates/backend/test/unit/routes/public/get-exchange-rates-currencies.test.ts"],"sourcesContent":["import { fastify, type FastifyInstance } from \"fastify\";\nimport {\n  getDefaultKnexPluginParams,\n  startTestEnv,\n  stopTestEnv,\n} from \"../../../helper\";\nimport fp from \"fastify-plugin\";\n\nlet app: FastifyInstance;\nlet knex = getDefaultKnexPluginParams();\n\nconst knexPlugin = fp(async (fastify: any, options: any) => {\n  fastify.decorate(\"knex\", knex);\n});\n\njest.mock(\"../../../../src/plugins/knex-plugin\", () => {\n  return knexPlugin;\n});\n\nbeforeAll(async () => {\n  app = await startTestEnv();\n});\n\nbeforeEach(async () => {\n  jest.resetAllMocks();\n});\n\nafterAll(async () => {\n  await stopTestEnv();\n});\n\ndescribe(\"GET /public/exchange-rates/currencies\", () => {\n  it(\"should get currency list\", async () => {\n    knex.table = () => ({\n      select: () => [\n        { currency: \"EUR\" },\n        { currency: \"USD\" },\n        { currency: \"JPY\" },\n      ],\n    });\n\n    const exchageRates = await app.inject({\n      method: \"GET\",\n      url: \"/public/exchange-rates/currencies\",\n    });\n\n    expect(exchageRates.statusCode).toBe(200);\n    expect(JSON.parse(exchageRates.body)).toEqual({ data: [\"EUR\", \"USD\", \"JPY\"] });\n  });\n});\n"],"version":3}