{"file":"/Users/kimnaciscionis/git/personal/seb-exchange-rates/backend/src/repositories/exchange-rate-repository.ts","mappings":";;;AAEA,4CAAsD;AACtD,gDAAuD;AAEhD,MAAM,iBAAiB,GAAG,KAAK,EAAE,GAAoB,EAAE,aAAwB,EAAE,EAAE;IACxF,MAAM,GAAG,CAAC,IAAI;SACX,KAAK,CAAC,kCAAsB,CAAC;SAC7B,MAAM,CAAC,aAAa,CAAC;SACrB,UAAU,CAAC,cAAc,CAAC;SAC1B,MAAM,EAAE,CAAC;AACd,CAAC,CAAC;AANW,QAAA,iBAAiB,qBAM5B;AAEK,MAAM,UAAU,GAAG,KAAK,EAAE,GAAoB,EAAE,MAAgB,EAAwB,EAAE;IAC/F,IAAI,MAAM,EAAE,CAAC;QACX,OAAO,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,kCAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,IAAA,6BAAkB,GAAE,CAAC,WAAW,EAAE,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAClI,CAAC;IAED,OAAO,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,kCAAsB,CAAC,CAAC,MAAM,EAAE,CAAC;AAC/D,CAAC,CAAC;AANW,QAAA,UAAU,cAMrB;AAEK,MAAM,gBAAgB,GAAG,KAAK,EAAE,GAAoB,EAAsB,EAAE;IACjF,OAAO,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,kCAAsB,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,YAAY,EAAE,IAAA,6BAAkB,GAAE,CAAC,WAAW,EAAE,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AAClI,CAAC,CAAC;AAFW,QAAA,gBAAgB,oBAE3B","names":[],"sources":["/Users/kimnaciscionis/git/personal/seb-exchange-rates/backend/src/repositories/exchange-rate-repository.ts"],"sourcesContent":["import { FastifyInstance } from \"fastify\";\nimport { FxRatesDb } from \"../entities\";\nimport { DB_EXCHANGE_RATE_TABLE } from \"../constants\";\nimport { getDateWithoutTime } from \"../utils/datetime\";\n\nexport const saveExchangeRates = async (app: FastifyInstance, exchangeRates: FxRatesDb) => {\n  await app.knex\n    .table(DB_EXCHANGE_RATE_TABLE)\n    .insert(exchangeRates)\n    .onConflict('posting_date')\n    .ignore();\n};\n\nexport const getFxRates = async (app: FastifyInstance, latest?: boolean): Promise<FxRatesDb[]> => {\n  if (latest) {\n    return await app.knex.table(DB_EXCHANGE_RATE_TABLE).select().where({ posting_date: getDateWithoutTime().toISOString()}).first();  \n  }\n\n  return await app.knex.table(DB_EXCHANGE_RATE_TABLE).select();\n};\n\nexport const getFxRatesLatest = async (app: FastifyInstance): Promise<FxRatesDb> => {\n  return await app.knex.table(DB_EXCHANGE_RATE_TABLE).select().where({ posting_date: getDateWithoutTime().toISOString()}).first();\n};\n\n"],"version":3}