f97289076d7fbb2874e4ba0b825dfd51
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const exchangeRates = __importStar(require("./exchange-rates"));
async function registerPublicRoutes(app) {
    app.route(exchangeRates.getExchangeRates);
    app.route(exchangeRates.getExchangeRatesByCurrency);
    app.route(exchangeRates.getExchangeRatesCurrencies);
    // app.addHook('onSend', function(request, reply, payload, done) {
    //     reply.headers({'content-type': 'application/json'})
    //     done()
    // })
}
exports.default = registerPublicRoutes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2tpbW5hY2lzY2lvbmlzL2dpdC9wZXJzb25hbC9zZWItZXhjaGFuZ2UtcmF0ZXMvc3JjL3JvdXRlcy9wdWJsaWMvcHVibGljLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxnRUFBa0Q7QUFFbkMsS0FBSyxVQUFVLG9CQUFvQixDQUFDLEdBQW9CO0lBQ25FLEdBQUcsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDMUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsMEJBQTBCLENBQUMsQ0FBQztJQUNwRCxHQUFHLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0lBRXBELGtFQUFrRTtJQUNsRSwwREFBMEQ7SUFDMUQsYUFBYTtJQUNiLEtBQUs7QUFDVCxDQUFDO0FBVEQsdUNBU0MiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2tpbW5hY2lzY2lvbmlzL2dpdC9wZXJzb25hbC9zZWItZXhjaGFuZ2UtcmF0ZXMvc3JjL3JvdXRlcy9wdWJsaWMvcHVibGljLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZhc3RpZnlJbnN0YW5jZSB9IGZyb20gXCJmYXN0aWZ5XCI7XG5pbXBvcnQgKiBhcyBleGNoYW5nZVJhdGVzIGZyb20gJy4vZXhjaGFuZ2UtcmF0ZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiByZWdpc3RlclB1YmxpY1JvdXRlcyhhcHA6IEZhc3RpZnlJbnN0YW5jZSkge1xuICAgIGFwcC5yb3V0ZShleGNoYW5nZVJhdGVzLmdldEV4Y2hhbmdlUmF0ZXMpO1xuICAgIGFwcC5yb3V0ZShleGNoYW5nZVJhdGVzLmdldEV4Y2hhbmdlUmF0ZXNCeUN1cnJlbmN5KTtcbiAgICBhcHAucm91dGUoZXhjaGFuZ2VSYXRlcy5nZXRFeGNoYW5nZVJhdGVzQ3VycmVuY2llcyk7XG5cbiAgICAvLyBhcHAuYWRkSG9vaygnb25TZW5kJywgZnVuY3Rpb24ocmVxdWVzdCwgcmVwbHksIHBheWxvYWQsIGRvbmUpIHtcbiAgICAvLyAgICAgcmVwbHkuaGVhZGVycyh7J2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ30pXG4gICAgLy8gICAgIGRvbmUoKVxuICAgIC8vIH0pXG59Il0sInZlcnNpb24iOjN9