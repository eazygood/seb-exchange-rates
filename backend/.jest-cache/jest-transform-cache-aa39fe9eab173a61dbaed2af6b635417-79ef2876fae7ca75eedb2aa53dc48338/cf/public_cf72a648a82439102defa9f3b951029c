8eb1c6e09f91a7fb4dc52a266361d622
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const exchangeRates = __importStar(require("./exchange-rates"));
async function registerPublicRoutes(app) {
    app.route(exchangeRates.getExchangeRates);
    app.route(exchangeRates.getExchangeRatesByCurrency);
    app.route(exchangeRates.getExchangeRatesCurrencies);
    app.addHook('onSend', function (request, reply, payload, done) {
        reply.headers({ 'content-type': 'application/json' });
        done();
    });
}
exports.default = registerPublicRoutes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2tpbW5hY2lzY2lvbmlzL2dpdC9wZXJzb25hbC9zZWItZXhjaGFuZ2UtcmF0ZXMvc3JjL3JvdXRlcy9wdWJsaWMvcHVibGljLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxnRUFBa0Q7QUFFbkMsS0FBSyxVQUFVLG9CQUFvQixDQUFDLEdBQW9CO0lBQ25FLEdBQUcsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDMUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsMEJBQTBCLENBQUMsQ0FBQztJQUNwRCxHQUFHLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0lBRXBELEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLFVBQVMsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsSUFBSTtRQUN4RCxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUMsY0FBYyxFQUFFLGtCQUFrQixFQUFDLENBQUMsQ0FBQTtRQUNuRCxJQUFJLEVBQUUsQ0FBQTtJQUNWLENBQUMsQ0FBQyxDQUFBO0FBQ04sQ0FBQztBQVRELHVDQVNDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9raW1uYWNpc2Npb25pcy9naXQvcGVyc29uYWwvc2ViLWV4Y2hhbmdlLXJhdGVzL3NyYy9yb3V0ZXMvcHVibGljL3B1YmxpYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGYXN0aWZ5SW5zdGFuY2UgfSBmcm9tIFwiZmFzdGlmeVwiO1xuaW1wb3J0ICogYXMgZXhjaGFuZ2VSYXRlcyBmcm9tICcuL2V4Y2hhbmdlLXJhdGVzJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gcmVnaXN0ZXJQdWJsaWNSb3V0ZXMoYXBwOiBGYXN0aWZ5SW5zdGFuY2UpIHtcbiAgICBhcHAucm91dGUoZXhjaGFuZ2VSYXRlcy5nZXRFeGNoYW5nZVJhdGVzKTtcbiAgICBhcHAucm91dGUoZXhjaGFuZ2VSYXRlcy5nZXRFeGNoYW5nZVJhdGVzQnlDdXJyZW5jeSk7XG4gICAgYXBwLnJvdXRlKGV4Y2hhbmdlUmF0ZXMuZ2V0RXhjaGFuZ2VSYXRlc0N1cnJlbmNpZXMpO1xuXG4gICAgYXBwLmFkZEhvb2soJ29uU2VuZCcsIGZ1bmN0aW9uKHJlcXVlc3QsIHJlcGx5LCBwYXlsb2FkLCBkb25lKSB7XG4gICAgICAgIHJlcGx5LmhlYWRlcnMoeydjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbid9KVxuICAgICAgICBkb25lKClcbiAgICB9KVxufSJdLCJ2ZXJzaW9uIjozfQ==