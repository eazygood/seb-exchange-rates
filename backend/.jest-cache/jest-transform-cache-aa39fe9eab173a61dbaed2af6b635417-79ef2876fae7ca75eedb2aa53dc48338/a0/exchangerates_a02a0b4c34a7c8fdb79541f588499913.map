{"file":"/Users/kimnaciscionis/git/personal/seb-exchange-rates/src/routes/public/exchange-rates.ts","mappings":";;;AAAA,6CAMwB;AACxB,kEAGuC;AACvC,oFAAyE;AAE5D,QAAA,gBAAgB,GAA+C;IAC1E,MAAM,EAAE,KAAK;IACb,GAAG,EAAE,iBAAiB;IACtB,MAAM,EAAE;QACN,WAAW,EAAE,mCAAwB;KACtC;IACD,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK;QACtB,MAAM,OAAO,GAAG,MAAM,IAAA,2BAAU,EAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAE/D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAErB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;IAChE,CAAC;CACF,CAAC;AAEW,QAAA,0BAA0B,GAElC;IACH,MAAM,EAAE,KAAK;IACb,GAAG,EAAE,2BAA2B;IAChC,MAAM,EAAE;QACN,MAAM,EAAE,0CAA+B;KACxC;IACD,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK;QACtB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACzB,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3D,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,IAAA,qCAAoB,EAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE5E,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;IAChE,CAAC;CACF,CAAC;AAEW,QAAA,0BAA0B,GAAc;IACnD,MAAM,EAAE,KAAK;IACb,GAAG,EAAE,4BAA4B;IACjC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK;QACtB,MAAM,UAAU,GAAG,MAAM,IAAA,qCAAa,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEnD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;IAC7C,CAAC;CACF,CAAC","names":[],"sources":["/Users/kimnaciscionis/git/personal/seb-exchange-rates/src/routes/public/exchange-rates.ts"],"sourcesContent":["import {\n  ExchangeRateCurrencyParam,\n  ExchangeRateCurrencyParamSchema,\n  ExchangeRatesQuery,\n  ExchangeRatesQuerySchema,\n  Route,\n} from \"../../entities\";\nimport {\n  getFxRates,\n  getFxRatesByCurrency,\n} from \"../../managers/fxrate-manager\";\nimport { getCurrencies } from \"../../repositories/currencies-repository\";\n\nexport const getExchangeRates: Route<{ Querystring: ExchangeRatesQuery }> = {\n  method: \"GET\",\n  url: \"/exchange-rates\",\n  schema: {\n    querystring: ExchangeRatesQuerySchema,\n  },\n  async handler(req, reply) {\n    const fxRates = await getFxRates(req.server, req.query.latest);\n\n    console.log(fxRates);\n\n    reply.code(200).send({ data: fxRates, size: fxRates.length });\n  },\n};\n\nexport const getExchangeRatesByCurrency: Route<{\n  Params: ExchangeRateCurrencyParam;\n}> = {\n  method: \"GET\",\n  url: \"/exchange-rates/:currency\",\n  schema: {\n    params: ExchangeRateCurrencyParamSchema,\n  },\n  async handler(req, reply) {\n    if (!req.params.currency) {\n      return reply.code(404).send({ data: [], status: false });\n    }\n\n    const fxRates = await getFxRatesByCurrency(req.server, req.params.currency);\n\n    reply.code(200).send({ data: fxRates, size: fxRates.length });\n  },\n};\n\nexport const getExchangeRatesCurrencies: Route<{}> = {\n  method: \"GET\",\n  url: \"/exchange-rates/currencies\",\n  async handler(req, reply) {\n    const currencies = await getCurrencies(req.server);\n\n    reply.code(200).send({ data: currencies });\n  },\n};\n"],"version":3}