6868c7dd4f07389f151503e627e39d39
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
jest.mock('../../../../src/plugins/knex-plugin', (() => {
    return knexPlugin;
}));
const helper_1 = require("../../../helper");
let app;
const fp = require('fastify-plugin');
const knexPlugin = fp(async (fastify, options) => {
    console.log(options);
    const knex = {
        raw: jest.fn(),
        destroy: jest.fn(),
        migrate: {
            latest: jest.fn(),
        },
        table: () => ({
            select: () => {
                [{}];
            },
        })
    };
    fastify.decorate('knex', knex);
});
beforeAll(async () => {
    app = await (0, helper_1.startTestEnv)();
});
beforeEach(async () => {
    jest.resetAllMocks();
});
afterAll(async () => {
    await (0, helper_1.stopTestEnv)();
});
describe('GET public/exchange-rates/currencies', () => {
    it.only('should get currency list', async () => {
        const exchageRates = await app.inject({
            method: 'GET',
            url: '/public/exchange-rates/currencies',
        });
        console.log(exchageRates.statusCode);
        console.log(exchageRates.body);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2tpbW5hY2lzY2lvbmlzL2dpdC9wZXJzb25hbC9zZWItZXhjaGFuZ2UtcmF0ZXMvdGVzdC91bml0L3JvdXRlcy9wdWJsaWMvZ2V0LWV4Y2hhbmdlLXJhdGVzLWN1cnJlbmNpZXMudGVzdC50cyIsIm1hcHBpbmdzIjoiOztBQXdCQSxJQUFJLENBQUMsSUFBSSxDQUFDLHFDQUFxQyxFQUFFLENBQUMsR0FBRyxFQUFFO0lBQ3JELE9BQU8sVUFBVSxDQUFDO0FBQ3BCLENBQUMsQ0FBQyxDQUFDLENBQUM7QUF6QkosNENBQTREO0FBRTVELElBQUksR0FBb0IsQ0FBQztBQUV6QixNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUNyQyxNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLE9BQVksRUFBRSxPQUFXLEVBQUUsRUFBRTtJQUN0RCxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JCLE1BQU0sSUFBSSxHQUFHO1FBQ1QsR0FBRyxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUU7UUFDZCxPQUFPLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRTtRQUNsQixPQUFPLEVBQUU7WUFDTCxNQUFNLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRTtTQUNwQjtRQUNELEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ1YsTUFBTSxFQUFFLEdBQUcsRUFBRTtnQkFDVCxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQ1IsQ0FBQztTQUNKLENBQUM7S0FDTCxDQUFBO0lBRUQsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDbkMsQ0FBQyxDQUFDLENBQUE7QUFNRixTQUFTLENBQUMsS0FBSyxJQUFJLEVBQUU7SUFDakIsR0FBRyxHQUFHLE1BQU0sSUFBQSxxQkFBWSxHQUFFLENBQUM7QUFFL0IsQ0FBQyxDQUFDLENBQUM7QUFFSCxVQUFVLENBQUMsS0FBSyxJQUFJLEVBQUU7SUFDbEIsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0FBQ3pCLENBQUMsQ0FBQyxDQUFBO0FBRUYsUUFBUSxDQUFDLEtBQUssSUFBSSxFQUFFO0lBQ2hCLE1BQU0sSUFBQSxvQkFBVyxHQUFFLENBQUM7QUFDeEIsQ0FBQyxDQUFDLENBQUE7QUFFRixRQUFRLENBQUMsc0NBQXNDLEVBQUUsR0FBRyxFQUFFO0lBQ2xELEVBQUUsQ0FBQyxJQUFJLENBQUMsMEJBQTBCLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDM0MsTUFBTSxZQUFZLEdBQUcsTUFBTSxHQUFHLENBQUMsTUFBTSxDQUFDO1lBQ2xDLE1BQU0sRUFBRSxLQUFLO1lBQ2IsR0FBRyxFQUFFLG1DQUFtQztTQUMzQyxDQUFDLENBQUM7UUFFSCxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNyQyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVuQyxDQUFDLENBQUMsQ0FBQTtBQUNOLENBQUMsQ0FBQyxDQUFBIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9raW1uYWNpc2Npb25pcy9naXQvcGVyc29uYWwvc2ViLWV4Y2hhbmdlLXJhdGVzL3Rlc3QvdW5pdC9yb3V0ZXMvcHVibGljL2dldC1leGNoYW5nZS1yYXRlcy1jdXJyZW5jaWVzLnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBGYXN0aWZ5SW5zdGFuY2UgfSBmcm9tIFwiZmFzdGlmeVwiO1xuaW1wb3J0IHsgc3RhcnRUZXN0RW52LCBzdG9wVGVzdEVudiB9IGZyb20gXCIuLi8uLi8uLi9oZWxwZXJcIjtcblxubGV0IGFwcDogRmFzdGlmeUluc3RhbmNlO1xuXG5jb25zdCBmcCA9IHJlcXVpcmUoJ2Zhc3RpZnktcGx1Z2luJyk7XG5jb25zdCBrbmV4UGx1Z2luID0gZnAoYXN5bmMgKGZhc3RpZnk6IGFueSwgb3B0aW9uczphbnkpID0+IHtcbiAgICBjb25zb2xlLmxvZyhvcHRpb25zKTtcbiAgICBjb25zdCBrbmV4ID0geyBcbiAgICAgICAgcmF3OiBqZXN0LmZuKCksXG4gICAgICAgIGRlc3Ryb3k6IGplc3QuZm4oKSxcbiAgICAgICAgbWlncmF0ZToge1xuICAgICAgICAgICAgbGF0ZXN0OiBqZXN0LmZuKCksXG4gICAgICAgIH0sXG4gICAgICAgIHRhYmxlOiAoKSA9PiAoe1xuICAgICAgICAgICAgc2VsZWN0OiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgW3t9XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBmYXN0aWZ5LmRlY29yYXRlKCdrbmV4Jywga25leCk7XG59KVxuXG5qZXN0Lm1vY2soJy4uLy4uLy4uLy4uL3NyYy9wbHVnaW5zL2tuZXgtcGx1Z2luJywgKCgpID0+IHtcbiAgcmV0dXJuIGtuZXhQbHVnaW47XG59KSk7XG5cbmJlZm9yZUFsbChhc3luYyAoKSA9PiB7XG4gICAgYXBwID0gYXdhaXQgc3RhcnRUZXN0RW52KCk7XG5cbn0pO1xuXG5iZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcbiAgICBqZXN0LnJlc2V0QWxsTW9ja3MoKTtcbn0pXG5cbmFmdGVyQWxsKGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBzdG9wVGVzdEVudigpO1xufSlcblxuZGVzY3JpYmUoJ0dFVCBwdWJsaWMvZXhjaGFuZ2UtcmF0ZXMvY3VycmVuY2llcycsICgpID0+IHtcbiAgICBpdC5vbmx5KCdzaG91bGQgZ2V0IGN1cnJlbmN5IGxpc3QnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGV4Y2hhZ2VSYXRlcyA9IGF3YWl0IGFwcC5pbmplY3Qoe1xuICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICAgIHVybDogJy9wdWJsaWMvZXhjaGFuZ2UtcmF0ZXMvY3VycmVuY2llcycsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKGV4Y2hhZ2VSYXRlcy5zdGF0dXNDb2RlKTtcbiAgICAgICAgY29uc29sZS5sb2coZXhjaGFnZVJhdGVzLmJvZHkpO1xuXG4gICAgfSlcbn0pXG4iXSwidmVyc2lvbiI6M30=