7d2492315cb66702501d606e99fad192
"use strict";
// import Fastify from "fastify";
// import fp from "fastify-plugin";
// import App from "../src/app";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.stopTestEnv = exports.startTestEnv = void 0;
const app_1 = __importDefault(require("../src/app"));
const mockKnex = async (fastify) => {
    fastify.knex = jest.fn().mockReturnThis();
    fastify.transacting = jest.fn().mockReturnThis();
    fastify.update = jest.fn().mockReturnThis();
    fastify.insert = jest.fn().mockReturnThis();
    fastify.select = jest.fn().mockReturnThis();
    fastify.from = jest.fn().mockReturnThis();
    fastify.where = jest.fn().mockReturnThis();
    fastify.knex.transaction =
        jest.fn(async function mockTransaction(cb) {
            return cb(trx);
        });
};
const trx = {
    commit: jest.fn(function (data) {
        return data;
    }),
    rollback: jest.fn(),
};
async function startTestEnv() {
    const app = require('..//src/app').default;
    await app.ready();
    mockKnex(app);
    return app;
}
exports.startTestEnv = startTestEnv;
async function stopTestEnv() {
    await app_1.default.close();
}
exports.stopTestEnv = stopTestEnv;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2tpbW5hY2lzY2lvbmlzL2dpdC9wZXJzb25hbC9zZWItZXhjaGFuZ2UtcmF0ZXMvdGVzdC9oZWxwZXIudHMiLCJtYXBwaW5ncyI6IjtBQUFBLGlDQUFpQztBQUNqQyxtQ0FBbUM7QUFDbkMsZ0NBQWdDOzs7Ozs7QUFlaEMscURBQTZCO0FBRTdCLE1BQU0sUUFBUSxHQUFHLEtBQUssRUFBRSxPQUFZLEVBQUUsRUFBRTtJQUN0QyxPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQyxPQUFPLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUNqRCxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUM1QyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUM1QyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQTtJQUMzQyxPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMzQyxPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVc7UUFDeEIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLFVBQVUsZUFBZSxDQUFDLEVBQUU7WUFDckMsT0FBTyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkIsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFDRixNQUFNLEdBQUcsR0FBRztJQUNWLE1BQU0sRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVMsSUFBSTtRQUN6QixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDLENBQUM7SUFDRixRQUFRLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRTtDQUNwQixDQUFDO0FBRUssS0FBSyxVQUFVLFlBQVk7SUFDakMsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUUzQyxNQUFNLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUVqQixRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFZixPQUFPLEdBQUcsQ0FBQztBQUNaLENBQUM7QUFSRCxvQ0FRQztBQUVNLEtBQUssVUFBVSxXQUFXO0lBQ2hDLE1BQU0sYUFBRyxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ25CLENBQUM7QUFGRCxrQ0FFQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMva2ltbmFjaXNjaW9uaXMvZ2l0L3BlcnNvbmFsL3NlYi1leGNoYW5nZS1yYXRlcy90ZXN0L2hlbHBlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgRmFzdGlmeSBmcm9tIFwiZmFzdGlmeVwiO1xuLy8gaW1wb3J0IGZwIGZyb20gXCJmYXN0aWZ5LXBsdWdpblwiO1xuLy8gaW1wb3J0IEFwcCBmcm9tIFwiLi4vc3JjL2FwcFwiO1xuXG4vLyBleHBvcnQgZnVuY3Rpb24gYnVpbGQoKSB7XG4vLyAgIGNvbnN0IGFwcCA9IEZhc3RpZnkoKTtcblxuLy8gICBiZWZvcmVBbGwoYXN5bmMgKCkgPT4ge1xuLy8gICAgIHZvaWQgYXBwLnJlZ2lzdGVyKGZwKEFwcCkpO1xuLy8gICAgIGF3YWl0IGFwcC5yZWFkeSgpO1xuLy8gICB9KTtcblxuLy8gICBhZnRlckFsbChhc3luYyAoKSA9PiBhd2FpdCBhcHAuY2xvc2UoKSk7XG5cbi8vICAgcmV0dXJuIGFwcDtcbi8vIH1cbmltcG9ydCB7IEZhc3RpZnlJbnN0YW5jZSB9IGZyb20gJ2Zhc3RpZnknO1xuaW1wb3J0IGFwcCBmcm9tICcuLi9zcmMvYXBwJztcblxuY29uc3QgbW9ja0tuZXggPSBhc3luYyAoZmFzdGlmeTogYW55KSA9PiB7XG4gIGZhc3RpZnkua25leCA9IGplc3QuZm4oKS5tb2NrUmV0dXJuVGhpcygpO1xuICBmYXN0aWZ5LnRyYW5zYWN0aW5nID0gamVzdC5mbigpLm1vY2tSZXR1cm5UaGlzKCk7XG4gIGZhc3RpZnkudXBkYXRlID0gamVzdC5mbigpLm1vY2tSZXR1cm5UaGlzKCk7XG4gIGZhc3RpZnkuaW5zZXJ0ID0gamVzdC5mbigpLm1vY2tSZXR1cm5UaGlzKCk7XG4gIGZhc3RpZnkuc2VsZWN0ID0gamVzdC5mbigpLm1vY2tSZXR1cm5UaGlzKClcbiAgZmFzdGlmeS5mcm9tID0gamVzdC5mbigpLm1vY2tSZXR1cm5UaGlzKCk7XG4gIGZhc3RpZnkud2hlcmUgPSBqZXN0LmZuKCkubW9ja1JldHVyblRoaXMoKTtcbiAgZmFzdGlmeS5rbmV4LnRyYW5zYWN0aW9uID0gXG4gIGplc3QuZm4oYXN5bmMgZnVuY3Rpb24gbW9ja1RyYW5zYWN0aW9uKGNiKSB7XG4gICAgICByZXR1cm4gY2IodHJ4KTtcbiAgfSk7XG59O1xuY29uc3QgdHJ4ID0ge1xuICBjb21taXQ6IGplc3QuZm4oZnVuY3Rpb24oZGF0YSkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gIH0pLFxuICByb2xsYmFjazogamVzdC5mbigpLFxufTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN0YXJ0VGVzdEVudigpOiBQcm9taXNlPEZhc3RpZnlJbnN0YW5jZT4ge1xuXHRjb25zdCBhcHAgPSByZXF1aXJlKCcuLi8vc3JjL2FwcCcpLmRlZmF1bHQ7XG5cblx0YXdhaXQgYXBwLnJlYWR5KCk7XG5cbiAgbW9ja0tuZXgoYXBwKTtcblxuXHRyZXR1cm4gYXBwO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc3RvcFRlc3RFbnYoKTogUHJvbWlzZTx2b2lkPiB7XG5cdGF3YWl0IGFwcC5jbG9zZSgpO1xufVxuXG4iXSwidmVyc2lvbiI6M30=