4316553b3cbc781b034d6f2e9b0e312f
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FxRatesJsonSchema = exports.FxRatesDbSchema = exports.FxRateDataSchemas = exports.FxRateByDateMapSchema = exports.SourceTargetFxRateMapSchema = exports.StucturedFxRatesSchema = exports.ExternalFxRatesSchemas = exports.ExternalFxRateSchema = exports.RateSchema = exports.CcyAmtSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
// interface CcyAmt {
//   Ccy: string;
//   Amt: string;
// }
// interface Rate {
//   Tp: String;
//   Dt: string;
//   CcyAmt: CcyAmt[];
// }
// interface ExternalFxRate {
//   $: { xmlns: string };
//   FxRate: Rate[];
// }
// interface ExternalFxRates {
//   FxRates: ExternalFxRate;
// }
exports.CcyAmtSchema = typebox_1.Type.Object({
    Ccy: typebox_1.Type.String(),
    Amt: typebox_1.Type.String(),
});
exports.RateSchema = typebox_1.Type.Object({
    Tp: typebox_1.Type.String(),
    Dt: typebox_1.Type.String(),
    CcyAmt: typebox_1.Type.Array(exports.CcyAmtSchema),
});
exports.ExternalFxRateSchema = typebox_1.Type.Object({
    $: typebox_1.Type.Object({ xmlns: typebox_1.Type.String() }),
    FxRate: typebox_1.Type.Array(exports.RateSchema),
});
exports.ExternalFxRatesSchemas = typebox_1.Type.Object({
    FxRates: exports.ExternalFxRateSchema
});
exports.StucturedFxRatesSchema = typebox_1.Type.Object({
    source_currency: typebox_1.Type.String(),
    target_currency: typebox_1.Type.String(),
    source_rate: typebox_1.Type.String(),
    target_rate: typebox_1.Type.String(),
    exchange_date: typebox_1.Type.String(),
});
exports.SourceTargetFxRateMapSchema = typebox_1.Type.Object({
    date: typebox_1.Type.String(),
    source_rate: typebox_1.Type.String(),
    target_rate: typebox_1.Type.String(),
});
exports.FxRateByDateMapSchema = typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.Array(exports.SourceTargetFxRateMapSchema));
exports.FxRateDataSchemas = typebox_1.Type.Object(typebox_1.Type.String(), exports.FxRateByDateMapSchema);
exports.FxRatesDbSchema = typebox_1.Type.Object({
    rates: typebox_1.Type.String(typebox_1.Type.Array(exports.StucturedFxRatesSchema)),
    posting_date: typebox_1.Type.String(),
});
exports.FxRatesJsonSchema = typebox_1.Type.String(exports.FxRateDataSchemas);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2tpbW5hY2lzY2lvbmlzL2dpdC9wZXJzb25hbC9zZWItZXhjaGFuZ2UtcmF0ZXMvc3JjL2VudGl0aWVzL2Z4cmF0ZS50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwrQ0FBaUQ7QUFFakQscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsSUFBSTtBQUNKLG1CQUFtQjtBQUNuQixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCLHNCQUFzQjtBQUN0QixJQUFJO0FBRUosNkJBQTZCO0FBQzdCLDBCQUEwQjtBQUMxQixvQkFBb0I7QUFDcEIsSUFBSTtBQUNKLDhCQUE4QjtBQUM5Qiw2QkFBNkI7QUFDN0IsSUFBSTtBQUVTLFFBQUEsWUFBWSxHQUFHLGNBQUksQ0FBQyxNQUFNLENBQUM7SUFDdEMsR0FBRyxFQUFFLGNBQUksQ0FBQyxNQUFNLEVBQUU7SUFDbEIsR0FBRyxFQUFFLGNBQUksQ0FBQyxNQUFNLEVBQUU7Q0FDbkIsQ0FBQyxDQUFBO0FBRVcsUUFBQSxVQUFVLEdBQUcsY0FBSSxDQUFDLE1BQU0sQ0FBQztJQUNwQyxFQUFFLEVBQUUsY0FBSSxDQUFDLE1BQU0sRUFBRTtJQUNqQixFQUFFLEVBQUUsY0FBSSxDQUFDLE1BQU0sRUFBRTtJQUNqQixNQUFNLEVBQUUsY0FBSSxDQUFDLEtBQUssQ0FBQyxvQkFBWSxDQUFDO0NBQ2pDLENBQUMsQ0FBQTtBQUdXLFFBQUEsb0JBQW9CLEdBQUcsY0FBSSxDQUFDLE1BQU0sQ0FBQztJQUM5QyxDQUFDLEVBQUUsY0FBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEtBQUssRUFBRSxjQUFJLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQztJQUN4QyxNQUFNLEVBQUUsY0FBSSxDQUFDLEtBQUssQ0FBQyxrQkFBVSxDQUFDO0NBQy9CLENBQUMsQ0FBQTtBQUVXLFFBQUEsc0JBQXNCLEdBQUcsY0FBSSxDQUFDLE1BQU0sQ0FBQztJQUNoRCxPQUFPLEVBQUUsNEJBQW9CO0NBQzlCLENBQUMsQ0FBQTtBQUlXLFFBQUEsc0JBQXNCLEdBQUcsY0FBSSxDQUFDLE1BQU0sQ0FBQztJQUNoRCxlQUFlLEVBQUUsY0FBSSxDQUFDLE1BQU0sRUFBRTtJQUM5QixlQUFlLEVBQUUsY0FBSSxDQUFDLE1BQU0sRUFBRTtJQUM5QixXQUFXLEVBQUUsY0FBSSxDQUFDLE1BQU0sRUFBRTtJQUMxQixXQUFXLEVBQUUsY0FBSSxDQUFDLE1BQU0sRUFBRTtJQUMxQixhQUFhLEVBQUUsY0FBSSxDQUFDLE1BQU0sRUFBRTtDQUM3QixDQUFDLENBQUM7QUFJVSxRQUFBLDJCQUEyQixHQUFHLGNBQUksQ0FBQyxNQUFNLENBQUM7SUFDckQsSUFBSSxFQUFFLGNBQUksQ0FBQyxNQUFNLEVBQUU7SUFDbkIsV0FBVyxFQUFFLGNBQUksQ0FBQyxNQUFNLEVBQUU7SUFDMUIsV0FBVyxFQUFFLGNBQUksQ0FBQyxNQUFNLEVBQUU7Q0FDM0IsQ0FBQyxDQUFDO0FBSVUsUUFBQSxxQkFBcUIsR0FBRyxjQUFJLENBQUMsTUFBTSxDQUFDLGNBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRSxjQUFJLENBQUMsS0FBSyxDQUFDLG1DQUEyQixDQUFDLENBQUMsQ0FBQTtBQUczRixRQUFBLGlCQUFpQixHQUFHLGNBQUksQ0FBQyxNQUFNLENBQUMsY0FBSSxDQUFDLE1BQU0sRUFBRSxFQUFFLDZCQUFxQixDQUFDLENBQUE7QUFHckUsUUFBQSxlQUFlLEdBQUcsY0FBSSxDQUFDLE1BQU0sQ0FBQztJQUN6QyxLQUFLLEVBQUUsY0FBSSxDQUFDLE1BQU0sQ0FBQyxjQUFJLENBQUMsS0FBSyxDQUFDLDhCQUFzQixDQUFDLENBQUM7SUFDdEQsWUFBWSxFQUFFLGNBQUksQ0FBQyxNQUFNLEVBQUU7Q0FDNUIsQ0FBQyxDQUFDO0FBR1UsUUFBQSxpQkFBaUIsR0FBRyxjQUFJLENBQUMsTUFBTSxDQUFDLHlCQUFpQixDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2tpbW5hY2lzY2lvbmlzL2dpdC9wZXJzb25hbC9zZWItZXhjaGFuZ2UtcmF0ZXMvc3JjL2VudGl0aWVzL2Z4cmF0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGF0aWMsIFR5cGUgfSBmcm9tIFwiQHNpbmNsYWlyL3R5cGVib3hcIjtcblxuLy8gaW50ZXJmYWNlIENjeUFtdCB7XG4vLyAgIENjeTogc3RyaW5nO1xuLy8gICBBbXQ6IHN0cmluZztcbi8vIH1cbi8vIGludGVyZmFjZSBSYXRlIHtcbi8vICAgVHA6IFN0cmluZztcbi8vICAgRHQ6IHN0cmluZztcbi8vICAgQ2N5QW10OiBDY3lBbXRbXTtcbi8vIH1cblxuLy8gaW50ZXJmYWNlIEV4dGVybmFsRnhSYXRlIHtcbi8vICAgJDogeyB4bWxuczogc3RyaW5nIH07XG4vLyAgIEZ4UmF0ZTogUmF0ZVtdO1xuLy8gfVxuLy8gaW50ZXJmYWNlIEV4dGVybmFsRnhSYXRlcyB7XG4vLyAgIEZ4UmF0ZXM6IEV4dGVybmFsRnhSYXRlO1xuLy8gfVxuXG5leHBvcnQgY29uc3QgQ2N5QW10U2NoZW1hID0gVHlwZS5PYmplY3Qoe1xuICBDY3k6IFR5cGUuU3RyaW5nKCksXG4gIEFtdDogVHlwZS5TdHJpbmcoKSxcbn0pXG5cbmV4cG9ydCBjb25zdCBSYXRlU2NoZW1hID0gVHlwZS5PYmplY3Qoe1xuICBUcDogVHlwZS5TdHJpbmcoKSxcbiAgRHQ6IFR5cGUuU3RyaW5nKCksXG4gIENjeUFtdDogVHlwZS5BcnJheShDY3lBbXRTY2hlbWEpLFxufSlcbmV4cG9ydCB0eXBlIFJhdGUgPSBTdGF0aWM8dHlwZW9mIFJhdGVTY2hlbWE+XG5cbmV4cG9ydCBjb25zdCBFeHRlcm5hbEZ4UmF0ZVNjaGVtYSA9IFR5cGUuT2JqZWN0KHtcbiAgJDogVHlwZS5PYmplY3QoeyB4bWxuczogVHlwZS5TdHJpbmcoKSB9KSxcbiAgRnhSYXRlOiBUeXBlLkFycmF5KFJhdGVTY2hlbWEpLFxufSlcblxuZXhwb3J0IGNvbnN0IEV4dGVybmFsRnhSYXRlc1NjaGVtYXMgPSBUeXBlLk9iamVjdCh7XG4gIEZ4UmF0ZXM6IEV4dGVybmFsRnhSYXRlU2NoZW1hXG59KVxuZXhwb3J0IHR5cGUgRXh0ZXJuYWxGeFJhdGVzID0gU3RhdGljPHR5cGVvZiBFeHRlcm5hbEZ4UmF0ZXNTY2hlbWFzPlxuXG5cbmV4cG9ydCBjb25zdCBTdHVjdHVyZWRGeFJhdGVzU2NoZW1hID0gVHlwZS5PYmplY3Qoe1xuICBzb3VyY2VfY3VycmVuY3k6IFR5cGUuU3RyaW5nKCksXG4gIHRhcmdldF9jdXJyZW5jeTogVHlwZS5TdHJpbmcoKSxcbiAgc291cmNlX3JhdGU6IFR5cGUuU3RyaW5nKCksXG4gIHRhcmdldF9yYXRlOiBUeXBlLlN0cmluZygpLFxuICBleGNoYW5nZV9kYXRlOiBUeXBlLlN0cmluZygpLFxufSk7XG5cbmV4cG9ydCB0eXBlIFN0dWN0dXJlZEZ4UmF0ZXMgPSBTdGF0aWM8dHlwZW9mIFN0dWN0dXJlZEZ4UmF0ZXNTY2hlbWE+XG5cbmV4cG9ydCBjb25zdCBTb3VyY2VUYXJnZXRGeFJhdGVNYXBTY2hlbWEgPSBUeXBlLk9iamVjdCh7XG4gIGRhdGU6IFR5cGUuU3RyaW5nKCksXG4gIHNvdXJjZV9yYXRlOiBUeXBlLlN0cmluZygpLFxuICB0YXJnZXRfcmF0ZTogVHlwZS5TdHJpbmcoKSxcbn0pO1xuXG5leHBvcnQgdHlwZSBTb3VyY2VUYXJnZXRGeFJhdGVEYXRhID0gU3RhdGljPHR5cGVvZiBTb3VyY2VUYXJnZXRGeFJhdGVNYXBTY2hlbWE+O1xuXG5leHBvcnQgY29uc3QgRnhSYXRlQnlEYXRlTWFwU2NoZW1hID0gVHlwZS5SZWNvcmQoVHlwZS5TdHJpbmcoKSwgVHlwZS5BcnJheShTb3VyY2VUYXJnZXRGeFJhdGVNYXBTY2hlbWEpKVxuZXhwb3J0IHR5cGUgRnhSYXRlQnlEYXRlRGF0YSA9IFN0YXRpYzx0eXBlb2YgRnhSYXRlQnlEYXRlTWFwU2NoZW1hPlxuXG5leHBvcnQgY29uc3QgRnhSYXRlRGF0YVNjaGVtYXMgPSBUeXBlLk9iamVjdChUeXBlLlN0cmluZygpLCBGeFJhdGVCeURhdGVNYXBTY2hlbWEpXG5leHBvcnQgdHlwZSBGeFJhdGVEYXRhID0gU3RhdGljPHR5cGVvZiBGeFJhdGVEYXRhU2NoZW1hcz5cblxuZXhwb3J0IGNvbnN0IEZ4UmF0ZXNEYlNjaGVtYSA9IFR5cGUuT2JqZWN0KHtcbiAgcmF0ZXM6IFR5cGUuU3RyaW5nKFR5cGUuQXJyYXkoU3R1Y3R1cmVkRnhSYXRlc1NjaGVtYSkpLFxuICBwb3N0aW5nX2RhdGU6IFR5cGUuU3RyaW5nKCksXG59KTtcbmV4cG9ydCB0eXBlIEZ4UmF0ZXNEYiA9IFN0YXRpYzx0eXBlb2YgRnhSYXRlc0RiU2NoZW1hPjtcblxuZXhwb3J0IGNvbnN0IEZ4UmF0ZXNKc29uU2NoZW1hID0gVHlwZS5TdHJpbmcoRnhSYXRlRGF0YVNjaGVtYXMpO1xuZXhwb3J0IHR5cGUgRnhSYXRlc0pzb24gPSBTdGF0aWM8dHlwZW9mIEZ4UmF0ZXNKc29uU2NoZW1hPjtcblxuIl0sInZlcnNpb24iOjN9