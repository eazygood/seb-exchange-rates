{"file":"/Users/kimnaciscionis/git/personal/seb-exchange-rates/src/managers/seed-manager.ts","mappings":"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","names":[],"sources":["/Users/kimnaciscionis/git/personal/seb-exchange-rates/src/managers/seed-manager.ts"],"sourcesContent":["import { FastifyInstance } from \"fastify/types/instance\";\nimport { withinTransaction } from \"../adapters/mysql-adapter\";\nimport { saveExchangeRates } from \"../repositories/exchange-rate-repository\";\nimport { getDateWithoutTime } from \"../utils/datetime\";\nimport { saveCurrencies } from \"../repositories/currencies-repository\";\nimport xmlToJson from \"../utils/xml-to-json\";\nimport { ExternalFxRates, Rate, StucturedFxRates } from \"../entities\";\n\nconst EXCHNAGE_RATE_URL =\n  \"https://www.lb.lt/webservices/FxRates/FxRates.asmx/getCurrentFxRates\";\n\nconst EXCHNAGE_RATE_BY_DATE_URL =\n  \"https://www.lb.lt/webservices/FxRates/FxRates.asmx/getFxRates\";\n\nexport const populateDbWithExchangeRates = async (\n  app: FastifyInstance,\n  date?: string\n) => {\n  const body = date ? `tp=EU&dt=${date}` : \"tp=EU\";\n  const url = date ? EXCHNAGE_RATE_BY_DATE_URL : EXCHNAGE_RATE_URL;\n\n  const response = await fetch(url, {\n    headers: {\n      \"content-type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"POST\",\n    body,\n  });\n\n  const xml = await response.text();\n  const exchangeRatesJson = (await xmlToJson(xml)) as ExternalFxRates;\n\n  const fxrates: StucturedFxRates[] = exchangeRatesJson.FxRates.FxRate.map(\n    (rate: Rate) => {\n      const date = rate.Dt;\n      const [source, target] = rate.CcyAmt;\n      const { Ccy: sourceCurreny, Amt: sourceRate } = source;\n      const { Ccy: targetCurrency, Amt: targetRate } = target;\n\n      return {\n        source_currency: sourceCurreny,\n        target_currency: targetCurrency,\n        source_rate: sourceRate,\n        target_rate: targetRate,\n        exchange_date: date,\n      };\n    }\n  );\n  \n  const postingDate = getDateWithoutTime(date).toISOString();\n\n  const defaultEurCurrency = {\n    source_currency: \"EUR\",\n    target_currency: \"EUR\",\n    source_rate: \"1\",\n    target_rate: \"1\",\n    exchange_date: postingDate,\n  };\n\n  fxrates.push(defaultEurCurrency);\n\n  const ratesToSave = {\n    rates: JSON.stringify(fxrates),\n    posting_date: postingDate,\n  };\n\n  await withinTransaction({\n    app,\n    callback: async () => {\n      await saveExchangeRates(app, ratesToSave);\n    },\n  });\n};\n\nexport const populateDbWithCurrency = async (app: FastifyInstance) => {\n  const response = await fetch(EXCHNAGE_RATE_URL, {\n    headers: {\n      \"content-type\": \"application/x-www-form-urlencoded\",\n    },\n    method: \"POST\",\n    body: \"tp=EU\",\n  });\n  const xml = await response.text();\n  const exchangeRatesJson = (await xmlToJson(xml)) as ExternalFxRates;\n\n  const currencies = exchangeRatesJson.FxRates.FxRate.map((rate: Rate) => {\n    const [_, to] = rate.CcyAmt;\n    const { Ccy: currency } = to;\n\n    return {\n      currency,\n    };\n  });\n\n  const uniqueCurrencies = [...new Set(currencies)];\n  uniqueCurrencies.push({ currency: \"EUR\" });\n\n  await saveCurrencies(app, uniqueCurrencies);\n};\n"],"version":3}